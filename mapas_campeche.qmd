---
title: "Datos Espaciales"
format: 
  html:
    grid: 
      body-width: 950px
editor: visual
---

# Introducción

Los datos espaciales son información que contiene una referencia geográfica, es decir, datos que están vinculados a una ubicación específica en la superficie terrestre. En el contexto de R, trabajamos frecuentemente con estos datos para realizar análisis geoespaciales, crear mapas y visualizar patrones espaciales.

# ¿Qué son los archivos Shapefile?

Los archivos **Shapefile** (con extensión `.shp`) son uno de los formatos más comunes para almacenar datos vectoriales geoespaciales. Fueron desarrollados por ESRI y se han convertido en un estándar de facto en la industria GIS.

## Componentes de un Shapefile

Un shapefile no es un archivo único, sino un conjunto de archivos que trabajan juntos:

-   **`.shp`**: Archivo principal que contiene la geometría de las características espaciales
-   **`.shx`**: Archivo de índice que permite acceso rápido a los registros
-   **`.dbf`**: Base de datos en formato dBASE que contiene los atributos
-   **`.prj`**: Archivo de proyección que define el sistema de coordenadas
-   **`.cpg`**: Archivo de codificación de caracteres (opcional)

## Tipos de geometrías

Los shapefiles pueden contener tres tipos principales de geometrías:

1.  **Puntos**: Ubicaciones específicas (coordenadas x, y)
2.  **Líneas**: Secuencias de puntos conectados (ríos, carreteras)
3.  **Polígonos**: Áreas cerradas (límites administrativos, lagos)
4.  **Multipuntos, Multilíneas y Multipolígonos**: Colecciones de los tipos anteriores

# Fuente de datos: INEGI

Para este ejemplo, utilizaremos los datos del **Instituto Nacional de Estadística y Geografía (INEGI)** de México. Específicamente, el Marco Geoestadístico disponible en:

**Enlace de descarga**: https://www.inegi.org.mx/app/biblioteca/ficha.html?upc=794551132173

Este conjunto de datos para el estado de Campeche incluye: - Límites estatales (archivos `14ent.*`) - Límites municipales (archivos `14mun.*`) - Otras divisiones territoriales

# Configuración del entorno

Primero, carguemos las librerías necesarias:

```{r setup}
#| warning: false
#| message: false

# Cargar librerías
library(tidyverse)    # Para manipulación de datos
library(sf)          # Para datos espaciales
library(viridis)     # Para paletas de colores

# Configurar tema para los mapas
theme_set(theme_minimal())
```

## Lectura de datos espaciales

### Cargando los límites estatales

Primero, leemos el archivo shapefile para Campeche:

```{r entidades}
# Nota: Asegúrate de que todos los archivos (shp, shx, dbf, prj, cpg) estén en el mismo directorio: data

Campeche_estado <- st_read("data/04ent.shp", options = "ENCODING=LATIN1", quiet = TRUE)
```

### Visualización del estado de Campeche

```{r mapa_Campeche_estado}
# Crear mapa básico de Campeche
mapa_Campeche <- ggplot(Campeche_estado) +
  geom_sf(fill = "lightblue", color = "darkblue", size = 0.8) +
  labs(
    title = "Estado de Campeche",
    subtitle = "Límites estatales",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10)
  )

print(mapa_Campeche)
```

## Trabajando con límites municipales

### Cargando los datos municipales

Ahora carguemos los límites municipales:

```{r municipios}
municipios_Campeche <- st_read("data/04mun.shp", options = "ENCODING=LATIN1", quiet = TRUE)

# Explorar los datos
cat("Número de municipios en Campeche:", nrow(municipios_Campeche), "\n")
cat("Primeros 10 municipios:\n")
print(municipios_Campeche$NOMGEO[1:10])
```

### Visualización de municipios

```{r mapa_municipios}
# Crear mapa de municipios de Campeche
mapa_municipios <- ggplot(municipios_Campeche) +
  geom_sf(fill = "lightgreen", color = "white", size = 0.3) +
  labs(
    title = "Municipios de Campeche",
    subtitle = paste("Total de municipios:", nrow(municipios_Campeche)),
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10)
  )

print(mapa_municipios)
```

### Destacando algunos municipios importantes

```{r municipios_importantes}
# Identificar algunos municipios importantes
municipios_importantes <- c("Tenabo", "Palizada", "San Francisco de Campeche", 
                          "Champotón", "Candelaria", "Ciudad del Carmen")

# Crear una variable para destacar estos municipios
municipios_Campeche <- municipios_Campeche %>%
  mutate(
    importante = case_when(
      NOMGEO %in% municipios_importantes ~ "Importante",
      TRUE ~ "Otros"
    )
  )

# Crear mapa destacando municipios importantes
mapa_destacados <- ggplot(municipios_Campeche) +
  geom_sf(aes(fill = importante), color = "white", size = 0.2) +
  scale_fill_manual(
    values = c("Importante" = "darkblue", "Otros" = "lightblue"),
    name = "Clasificación"
  ) +
  labs(
    title = "Municipios Importantes de Campeche",
    subtitle = "Se destacan algunos municipios principales",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "bottom"
  )

print(mapa_destacados)
```

## Análisis espacial básico

### Calculando áreas

```{r areas}
# Calcular área de cada municipio (en km²)
municipios_Campeche <- municipios_Campeche %>%
  mutate(area_km2 = as.numeric(st_area(.)) / 1e6)  # Convertir m² a km²

# Los 10 municipios más grandes
municipios_grandes <- municipios_Campeche |> 
  st_drop_geometry() |> 
  arrange(desc(area_km2)) |> 
  select(NOMGEO, area_km2) |> 
  head(10)

print("Los 10 municipios más grandes de Campeche:")
knitr::kable(municipios_grandes, 
             col.names = c("Municipio", "Área (km²)"),
             digits = 2)
```

### Mapa de áreas

```{r mapa_areas}
# Crear mapa coloreado por área
mapa_areas <- ggplot(municipios_Campeche) +
  geom_sf(aes(fill = area_km2), color = "white", size = 0.1) +
  scale_fill_viridis_c(
    name = "Área\n(km²)",
    trans = "log10",
    labels = scales::comma_format()
  ) +
  labs(
    title = "Área de los Municipios de Campeche",
    subtitle = "Coloreado por área en escala logarítmica",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "right"
  )

print(mapa_areas)
```

# Descripciones graficas del estado de campeche

## Datos espaciales de campeche

```{r datos_municipios}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

#municipios_campeche <- st_read("1_estadistica_descriptiva/data/14mun.shp", options = "ENCODING=LATIN1", quiet = TRUE)
municipios_campeche <- st_read("data/04mun.shp", options = "ENCODING=LATIN1", quiet = TRUE)

# Crear mapa de municipios de campeche
mapa_municipios <- ggplot(municipios_campeche) +
  geom_sf(fill = "lightgreen", color = "white", size = 0.3) +
  labs(
    title = "Municipios de campeche",
    subtitle = paste("Total de municipios:", nrow(municipios_campeche)),
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10)
  )

print(mapa_municipios)
```

### Lectura de datos

Carguemos los datos de población y vivienda para el año 2020, filtrando por algunos indicadores relevantes:

-   Edad mediana
-   Población total
-   Porcentaje de la población derechohabiente en el IMSS
-   Porcentaje de viviendas con electricidad
-   Porcentaje de viviendas particulares habitadas que disponen de Internet

```{r}
#| code-fold: true
#| warning: false
#| message: false


#datos_total <- read_csv("1_estadistica_descriptiva/data/cpv_valor_14.csv", na = c("ND"))
datos_total <- read_csv("data/cpv_valor_04.csv", na = c("ND"))

datos_total <- datos_total |> filter(año == 2020)
#unique(datos_total$indicador)
datos_seleccion <- datos_total |> 
  filter(indicador %in% c("Edad mediana", "Población total", "Porcentaje de la población derechohabiente en el IMSS", "Porcentaje de viviendas con electricidad",
  "Porcentaje de viviendas particulares habitadas que disponen de Internet", "Viviendas habitadas"), desc_municipio != "Estatal") |> 
  select(desc_municipio, indicador, valor)
```

Cambiamos el formato de los datos para que cada indicador sea una columna separada, facilitando el análisis posterior. Además, limpiamos los nombres de las columnas para que sean más manejables y creamos una columna `NOMGEO` para poder unir los datos espaciales con los datos de población y vivienda.

```{r}
#| code-fold: true
#| warning: false
#| message: false

datos <- datos_seleccion |>
    pivot_wider(names_from = indicador, values_from = valor) 

datos <- datos |> 
  clean_names() 

# Corrección de nombres de municipios

datos <- datos |> 
  mutate(desc_municipio = if_else(desc_municipio == "EL Arenal", "El Arenal", desc_municipio))

datos <- datos |> 
  mutate(NOMGEO = desc_municipio)
```

### Estadísticas descriptivas

Ahora que tenemos nuestros datos preparados, podemos realizar un resumen numérico de las variables cuantitativas. Para ello, utilizaremos la función `summary()` de R, que nos proporcionará un resumen estadístico de cada variable, incluyendo la media, mediana, mínimo, máximo y cuartiles. Hay que agregar las demás medidas de dispersión analizadas en clase (desviación media, varianza, rango, etc.) para cada variable cuantitativa.

```{r}
#| code-fold: true

summary(datos)
```

Se unen los datos geograficos de los municipios de campeche con los datos de población y vivienda. Esto nos permitirá crear mapas y realizar análisis espaciales. Para preservar la integridad de los datos, utilizamos `left_join()` de `dplyr`, el primer conjunto de datos debe ser el que contenga la columna `geometry`.

```{r}
#| code-fold: true

datos <- left_join(municipios_campeche, datos)
```

## Edad (Mediana)

```{r}
#| code-fold: true
#| fig-width: 8
#| fig-align: center


ggplot(datos) +
  geom_sf(aes(fill = edad_mediana), color = "white", size = 0.1) +
  scale_fill_viridis_c(
    name = "Edad (mediana)"
  ) +
  labs(
    title = "Edad (mediana) de los Municipios de campeche",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "right"
  )

```

A continuación, se presentan diferentes tipos de gráficos para visualizar la distribución de una sola variable cuantitativa, en este caso, la edad mediana de los municipios de campeche. Estos gráficos son útiles para comprender la distribución y características de la variable. En cada caso, es necesario que incluyas cómo se lleva a cabo cada gráfico y posteriormente, la interpretación de los resultados.

### Histograma

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(datos) +
  geom_histogram(aes(edad_mediana), color="black", fill = "olivedrab", boundary=min(datos$edad_mediana), binwidth = 2) +
  labs(
    title = "Distribución de la Edad",
    x = "Edad (años)", y = "Frecuencia"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )

```

### Gráfica de densidad

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(datos) +
  geom_density(aes(edad_mediana), color="black", fill = "firebrick", alpha=0.6) +
  labs(
    title = "Distribución de la Edad",
    x = "Edad (años)", y = "Densidad"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )


```

### Boxplot

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(data = datos, aes(x = "", y = edad_mediana)) +
    geom_boxplot(
    fill = "#4A90E2",           # Color de relleno
    color = "#2C5F7A",          # Color del borde más oscuro
    alpha = 0.8,                # Transparencia
    outlier.color = "#E74C3C",  # Color rojo para outliers
    outlier.size = 2.5,         # Tamaño de outliers
    outlier.alpha = 0.7,        # Transparencia de outliers
    width = 0.5,                # Ancho del boxplot
    notch = TRUE,               # Muescas para intervalo de confianza
    notchwidth = 0.7            # Ancho de las muescas
  ) +
  geom_jitter(alpha = 0.3, color = "#34495E", size = 1.5, width = 0.1) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "años")) +
  labs(title = "Distribución de la Edad (mediana)", 
  subtitle = "Población del Estado de campeche",
  y = "Edad (años)",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```

### Gráfico de violín

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(data = datos, aes(x = "", y = edad_mediana)) +
    geom_violin(fill = "#4A90E2", color = "#2C5F7A", alpha = 0.8,
    trim = FALSE,               # No recortar las colas
    scale = "width", width = 0.8, linewidth = 0.8) +
    geom_boxplot( width = 0.15, fill = "white", color = "#2C5F7A", alpha = 0.9,
    outlier.color = "#E74C3C", outlier.size = 1.5, outlier.alpha = 0.8, notch = FALSE) +
  stat_summary(fun = median, geom = "point", shape = 21, size = 3, fill = "white",
  color = "#2C5F7A", stroke = 1.5) +
  geom_jitter(alpha = 0.2, color = "#34495E", size = 0.8, width = 0.05) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "años")) +
  labs(title = "Distribución de la Edad (mediana)", 
  subtitle = "Población del Estado de campeche",
  y = "Edad (años)",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
  
```

### Q-Q Plot (comparación de cuantiles)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center


# Q-Q Plot básico para normalidad
ggplot(data = datos, aes(sample = edad_mediana)) +
    stat_qq(color = "#4A90E2", size = 2, alpha = 0.7) +
    stat_qq_line(color = "#E74C3C", linewidth = 1, linetype = "dashed") +
    scale_x_continuous(name = "Cuantiles Teóricos (Distribución Normal)",
    breaks = pretty_breaks(n = 6)) +
    scale_y_continuous(name = "Cuantiles Muestrales (Edad mediana)",
    breaks = pretty_breaks(n = 6),
    labels = function(x) paste(x, "años")) +
    labs(title = "Gráfico Q-Q para Normalidad",
    subtitle = "Edad Mediana - Población campeche") +
    theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
  


```


### Dot Plot (Gráfico de puntos)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-height: 16
#| fig-align: center

ggplot(data = datos, aes(x = edad_mediana, y = reorder(NOMGEO, edad_mediana))) +
  geom_point(color = "#4A90E2", size = 3, alpha = 0.8) +
  geom_segment(aes(x = 0, xend = edad_mediana, y = NOMGEO, yend = NOMGEO),
    color = "#BDC3C7", size = 0.5, alpha = 0.7) +
  scale_x_continuous(
    name = "Edad (años)",
    breaks = pretty_breaks(n = 6),
    expand = expansion(mult = c(0, 0.1))) +
  scale_y_discrete(
    name = "Municipios",
    expand = expansion(mult = c(0.01, 0.01))
  ) +
  labs(
    title = "Dot Plot - Edad (mediana) por Municipio",
    subtitle = "Estado de campeche") +
  theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=9),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )

```

## Población total

```{r}
#| code-fold: true
#| fig-width: 8
#| fig-align: center

ggplot(datos) +
  geom_sf(aes(fill = poblacion_total), color = "white", size = 0.1) +
  scale_fill_viridis_c(
    name = "Población",
    trans = "log10",
    labels = scales::comma_format()
  ) +
  labs(
    title = "Población de los Municipios de campeche",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "right"
  )

```

## IMMS

```{r}
#| code-fold: true
#| fig-width: 8
#| fig-align: center

ggplot(datos) +
  geom_sf(aes(fill = porcentaje_de_la_poblacion_derechohabiente_en_el_imss), color = "blue", size = 0.1) +
  scale_fill_viridis_c(
    name = "Derechohabientes IMMS (%) de los municipios de campeche",
    option = "C"
  ) +
  labs(
    title = "Derechohabientes a IMMS en el Estado de campeche",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "right"
  )

```
